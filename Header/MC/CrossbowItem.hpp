// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"
#include "Item.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class CrossbowItem : public Item {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_CROSSBOWITEM
public:
    class CrossbowItem& operator=(class CrossbowItem const &) = delete;
    CrossbowItem(class CrossbowItem const &) = delete;
    CrossbowItem() = delete;
#endif


public:
    /*0*/ virtual ~CrossbowItem();
    /*6*/ virtual int getMaxUseDuration(class ItemStack const *) const;
    /*7*/ virtual void __unk_vfn_7();
    /*10*/ virtual void __unk_vfn_10();
    /*13*/ virtual void __unk_vfn_13();
    /*15*/ virtual void __unk_vfn_15();
    /*51*/ virtual void __unk_vfn_51();
    /*53*/ virtual void __unk_vfn_53();
    /*62*/ virtual int getEnchantSlot() const;
    /*66*/ virtual void __unk_vfn_66();
    /*70*/ virtual void __unk_vfn_70();
    /*71*/ virtual void __unk_vfn_71();
    /*72*/ virtual void __unk_vfn_72();
    /*75*/ virtual void __unk_vfn_75();
    /*79*/ virtual void __unk_vfn_79();
    /*80*/ virtual void __unk_vfn_80();
    /*84*/ virtual class ItemStack & use(class ItemStack &, class Player &) const;
    /*86*/ virtual enum ItemUseMethod useTimeDepleted(class ItemStack &, class Level *, class Player *) const;
    /*87*/ virtual void releaseUsing(class ItemStack &, class Player *, int) const;
    /*118*/ virtual int getAnimationFrameFor(class Mob *, bool, class ItemStack const *, bool) const;
    /*121*/ virtual struct TextureUVCoordinateSet const & getIcon(class ItemStackBase const &, int, bool) const;
    /*123*/ virtual class Item & setIcon(std::string const &, int);
    /*126*/ virtual bool canBeCharged() const;
    /*128*/ virtual void playSoundIncrementally(class ItemStack const &, class Mob &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_CROSSBOWITEM
#endif
    MCAPI CrossbowItem(std::string const &, int);

//private:
    MCAPI class Vec3 _getShootDir(class Player const &, float) const;
    MCAPI void _shootArrow(class ItemInstance const &, class ItemInstance const &, class Player &) const;
    MCAPI void _shootFirework(class ItemInstance const &, class Player &) const;


private:
    MCAPI static int const DEFAULT_USE_DURATION;


};