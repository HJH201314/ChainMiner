// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Command.hpp"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class NewExecuteCommand : public Command {

#define AFTER_EXTRA

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_NEWEXECUTECOMMAND
public:
    class NewExecuteCommand& operator=(class NewExecuteCommand const &) = delete;
    NewExecuteCommand(class NewExecuteCommand const &) = delete;
    NewExecuteCommand() = delete;
#endif


public:
    /*0*/ virtual ~NewExecuteCommand();
    /*1*/ virtual void execute(class CommandOrigin const &, class CommandOutput &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_NEWEXECUTECOMMAND
#endif
    MCAPI static void setup(class CommandRegistry &, int);

//private:
    MCAPI void _commandOutputFail(class CommandOutput &, class std::optional<int> const &) const;
    MCAPI void _commandOutputSuccess(class CommandOutput &, class std::optional<int> const &) const;
    MCAPI bool _detectConditionSubcommand(class CommandOrigin const &, class CommandOutput &, class std::optional<int> &) const;
    MCAPI class std::optional<struct ScoreInfo> _getScoreFromSelectorOnObjective(class Scoreboard const &, class CommandSelector<class Actor> const &, std::string const &, class CommandOrigin const &, class CommandOutput &) const;
    MCAPI class std::optional<struct ScoreboardId> _getScoreboardIdForSelector(class Scoreboard const &, class CommandSelector<class Actor> const &, class CommandOrigin const &, class CommandOutput &) const;
    MCAPI void _handleScoreNotFound(class CommandOrigin const &, class CommandSelector<class Actor> const &, class Objective const &, class CommandOutput &) const;


private:


};