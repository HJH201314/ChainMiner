// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class ScriptScoreboard {

#define AFTER_EXTRA

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCRIPTSCOREBOARD
public:
    ScriptScoreboard() = delete;
#endif


public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SCRIPTSCOREBOARD
    MCVAPI enum EventResult onObjectiveRemoved(std::string const &);
    MCVAPI enum EventResult onScoreboardIdentityRemoved(struct ScoreboardId const &);
    MCVAPI ~ScriptScoreboard();
#endif
    MCAPI ScriptScoreboard(class ScriptScoreboard const &);
    MCAPI ScriptScoreboard(class Scoreboard &, class Level &, class Scripting::WeakLifetimeScope const &);
    MCAPI class Scripting::Result<class Scripting::StrongTypedObjectHandle<class ScriptScoreboardObjective>> getObjective(std::string const &);
    MCAPI class Scripting::Result<std::vector<class Scripting::StrongTypedObjectHandle<class ScriptScoreboardObjective>>> getObjectives();
    MCAPI class Scripting::StrongTypedObjectHandle<class ScriptScoreboardIdentity> getOrCreateScoreboardIdentity(class IdentityDefinition const &);
    MCAPI class Scripting::Result<std::vector<class Scripting::StrongTypedObjectHandle<class ScriptScoreboardIdentity>>> getParticipants();
    MCAPI class ScriptScoreboard & operator=(class ScriptScoreboard const &);
    MCAPI class Objective * tryGetObjective(std::string const &);
    MCAPI static class Scripting::ClassBindingBuilder<class ScriptScoreboard> bind(struct Scripting::Version);

//private:
    MCAPI class Scripting::StrongTypedObjectHandle<class ScriptScoreboardObjective> _getOrCreateScoreboardObjective(class Objective &);


private:


};