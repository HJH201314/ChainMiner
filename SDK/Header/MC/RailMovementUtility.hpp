// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class RailMovementUtility {

#define AFTER_EXTRA

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_RAILMOVEMENTUTILITY
public:
    class RailMovementUtility& operator=(class RailMovementUtility const &) = delete;
    RailMovementUtility(class RailMovementUtility const &) = delete;
    RailMovementUtility() = delete;
#endif


public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_RAILMOVEMENTUTILITY
#endif
    MCAPI static class Vec3 calculateGoldenRailSpeedIncrease(class IConstBlockSource const &, class BlockPos const &, int, class Vec3);
    MCAPI static class Vec3 calculateMoveVelocity(class Block const &, int, float, bool, class Vec3 &, bool &, bool &, class std::function<bool (class Vec3 &)> const &);
    MCAPI static bool calculatePassengerRailMovementInput(class Vec3 &, float, float);
    MCAPI static class Vec3 calculatePostRailMovementMinecartPosition(class IConstBlockSource const &, class Vec3 const &, class Vec3, class BlockPos const &, int, class Vec3 &);
    MCAPI static class Vec3 calculatePreRailMovementMinecartPosition(class Vec3, class BlockPos const &, int, float);
    MCAPI static bool getPos(class IConstBlockSource const &, class Vec3 &, class Vec3);

//private:


private:
    MCAPI static class std::array<struct RailMovementUtility::RailExits, 10> const RAIL_EXITS;


};