// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

namespace CacheMovingStateSystem {

#define AFTER_EXTRA

#undef AFTER_EXTRA
    MCAPI void cacheMovingStateForNonRemotePlayers(class StrictEntityContext const &, struct SynchedActorDataComponent &, struct ActorRotationComponent &, struct PostTickPositionDeltaComponent const &);
    MCAPI void tickCacheMovingState(class ViewT<class StrictEntityContext, class EntityRegistryBase, struct SynchedActorDataComponent, struct ActorRotationComponent, class Optional<class FlagComponent<struct MovingFlag>>, struct Include<class FlagComponent<struct ActorMovementTickNeededFlag>, class FlagComponent<struct UsesECSMovementFlag>>, struct Exclude<struct PassengerComponent, class FlagComponent<struct PlayerComponentFlag>>>, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct SynchedActorDataComponent, struct ActorRotationComponent, class Optional<class FlagComponent<struct MovingFlag>>, struct Include<class FlagComponent<struct ActorMovementTickNeededFlag>, class FlagComponent<struct UsesECSMovementFlag>, class FlagComponent<struct RemotePlayerComponentFlag>>, struct Exclude<struct PassengerComponent>>, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct SynchedActorDataComponent, struct ActorRotationComponent, struct PostTickPositionDeltaComponent const, struct Include<class FlagComponent<struct ActorMovementTickNeededFlag>, class FlagComponent<struct UsesECSMovementFlag>, class FlagComponent<struct PlayerComponentFlag>>, struct Exclude<struct PassengerComponent, class FlagComponent<struct RemotePlayerComponentFlag>>>);
    MCAPI void tickEntity(class StrictEntityContext &, struct SynchedActorDataComponent &, struct ActorRotationComponent &, class Optional<class FlagComponent<struct MovingFlag>>);
    MCAPI void tickNonRemotePlayerPassengerEntity(class StrictEntityContext const &, struct PassengerComponent const &, struct SynchedActorDataComponent &, struct ActorRotationComponent &, struct PostTickPositionDeltaComponent const &, class ViewT<class StrictEntityContext, class EntityRegistryBase, class FlagComponent<struct ControlledByLocalInstanceFlag>> const &);
    MCAPI void tickPassengerCacheMovingState(class ViewT<class StrictEntityContext, class EntityRegistryBase, struct PassengerComponent const, struct SynchedActorDataComponent, struct ActorRotationComponent, class Optional<class FlagComponent<struct MovingFlag>>, struct Include<class FlagComponent<struct ActorMovementTickNeededFlag>, class FlagComponent<struct UsesECSMovementFlag>>, struct Exclude<class FlagComponent<struct PlayerComponentFlag>>>, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct PassengerComponent const, struct SynchedActorDataComponent, struct ActorRotationComponent, class Optional<class FlagComponent<struct MovingFlag>>, struct Include<class FlagComponent<struct ActorMovementTickNeededFlag>, class FlagComponent<struct UsesECSMovementFlag>, class FlagComponent<struct RemotePlayerComponentFlag>>>, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct PassengerComponent const, struct SynchedActorDataComponent, struct ActorRotationComponent, struct PostTickPositionDeltaComponent const, struct Include<class FlagComponent<struct ActorMovementTickNeededFlag>, class FlagComponent<struct UsesECSMovementFlag>, class FlagComponent<struct PlayerComponentFlag>>, struct Exclude<class FlagComponent<struct RemotePlayerComponentFlag>>>, class ViewT<class StrictEntityContext, class EntityRegistryBase, class FlagComponent<struct ControlledByLocalInstanceFlag>>);
    MCAPI void tickPassengerEntity(class StrictEntityContext &, struct PassengerComponent const &, struct SynchedActorDataComponent &, struct ActorRotationComponent &, class Optional<class FlagComponent<struct MovingFlag>>, class ViewT<class StrictEntityContext, class EntityRegistryBase, class FlagComponent<struct ControlledByLocalInstanceFlag>> const &);

};